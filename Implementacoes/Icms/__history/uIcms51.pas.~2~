unit uIcms51;

interface

uses uBaseIcmsProprio, uValorIcms, uIIcms51;

type
  TIcms51 = class(TInterfacedObject, IIcms51)
  private
    FBaseIcmsProprio: TBaseIcmsProprio;
    FValorIcmsOperacao: TValorIcms;
    FValorIcmsDiferido: currency;
    FValorIcmsProprio: currency;
    function BaseIcmsProprio: currency;
    function ValorIcmsOperacao: currency;
    function ValorIcmsDiferido: currency;
    function ValorIcmsProprio: currency;

  public
    constructor Create(_valorProduto, _valorFrete, _valorSeguro,
      _despesasAcessorias, _valorDesconto: currency;
      _ALiquotaICMS, _percentualDiferimento: currency;
      _percentualReducao: currency = 0; _valorIpi: currency = 0);
    destructor Destroy; override;

  end;

implementation

{ TIcms51 }

function TIcms51.BaseIcmsProprio: currency;
begin

end;

constructor TIcms51.Create(_valorProduto, _valorFrete, _valorSeguro,
  _despesasAcessorias, _valorDesconto, _ALiquotaICMS, _percentualDiferimento,
  _percentualReducao, _valorIpi: currency);
begin
  FBaseIcmsProprio := TBaseIcmsProprio.Create(_valorProduto, _valorFrete,
    _valorSeguro, _despesasAcessorias, _valorDesconto, _percentualReducao,
    _valorIpi);

  FValorIcmsOperacao := TValorIcms.Create(FBaseIcmsProprio, _ALiquotaICMS);

  FValorIcmsDiferido := FValorIcmsOperacao.ValorIcmsProprio *
    (_percentualDiferimento / 100);
end;

destructor TIcms51.Destroy;
begin

  inherited;
end;

function TIcms51.ValorIcmsDiferido: currency;
begin

end;

function TIcms51.ValorIcmsOperacao: currency;
begin

end;

function TIcms51.ValorIcmsProprio: currency;
begin

end;

end.
